#
### Variables
# first up let's import colors from pywall
include "$HOME/.cache/wal/colors-sway"

# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty

# Your preferred browser, let's leave it up to the system
set $browser "xdg-open http://about:blank"

# Window borders
default_border pixel 1
default_floating_border normal
hide_edge_borders smart

smart_gaps on
gaps inner 10

# for_window [title="."] title_format "<span style='color:#ffffff'>%title (%app_id)</span>"

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | dmenu -fn "-xos4-terminus-medium-r-*-*-14-*" | xargs swaymsg exec --
set $menu rofi -show combi \
     -modi "combi,calc" \
     -combi-modi "drun,power:rofi-power-menu" -location 1 -width 100 \
		 -lines 1 -line-margin 0 -line-padding 1 \
		 -separator-style none -columns 9 -bw 0 \
		 -font "mono 12" \
     -display-combi "->"

# set $menu albert toggle | xargs swaymsg exec --
set $swaylock "swaylock -r --image $HOME/.config/sway/lockscreen.png --color '$$color3' --scaling center"

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * scale 1.0 bg $wallpaper fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs
#
# Example configuration:
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
#
# exec swayidle -w \
#          timeout 300 '$$swaylock -f' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep '$$swaylock -f'

bindsym $mod+Escape exec $swaylock

# Default workspaces for common programs
#
# There's an issue moving spotify to another workspace
# See https://github.com/i3/i3/issues/2060
for_window [class="Spotify"] move to workspace 2

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+t exec $term

    # Start a browser
    bindsym $mod+b exec $browser

    # Kill focus
    # bindsym $mod+Shift+q kill
    bindsym $mod+w kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10

    # Swtich using tab
    bindsym $mod+tab workspace next_on_output
    bindsym $mod+Shift+tab workspace prev_on_output

    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+Shift+b splith
    bindsym $mod+Shift+v splitv

    # Switch the current container between different layout styles
    # bindsym $mod+s layout stacking
    # bindsym $mod+w layout tabbed
    # bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    swaybar_command waybar
}

# Configure the titlebar font/colors
# TODO: Move these to .Xresources
client.focused $color3 $color3 #FFFFFF
client.unfocused $background $background $color8

font pango: Sans 11

input "type:keyboard" {
   xkb_options caps:escape
}

input type:touchpad {
    tap enabled
    # natural_scroll enabled
}

# display brightness
bindsym XF86MonBrightnessUp exec brillo -u 20000 -A 5
bindsym XF86MonBrightnessDown exec brillo -u 20000 -U 5

# media keys
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioPlay exec playerctl --player=spotify play-pause
bindsym XF86AudioPrev exec playerctl --player=spotify previous
bindsym XF86AudioNext exec playerctl --player=spotify next

# bindsym --release $mod+c exec wtype -M ctrl c -m ctrl

# load albert
# exec --no-startup-id albert | xargs swaymsg exec --

# autostart items
exec --no-startup-id libinput-gestures
exec --no-startup-id flashfocus

# start insync with hack
# see https://forums.insynchq.com/t/gui-not-starting-under-wayland/15770/8
exec --no-startup-id insync start --qt-qpa-platform=xcb


include /etc/sway/config.d/*
