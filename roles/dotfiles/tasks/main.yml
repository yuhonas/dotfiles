---
- name: ensure we have an .ssh dir with the correct perms
  file: path={{ ansible_env.HOME }}/.ssh state=directory mode=0700

# https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html
- name: add local bin dir for custom scripts
  file: path={{ ansible_env.HOME }}/.local/bin state=directory recurse=true

- name: add projects dir for various projects
  file: path={{ ansible_env.HOME }}/Projects state=directory mode=0700

# i'm a fan of some "modern" replacements for various utilities
# * https://github.com/ibraheemdev/modern-unix
# * https://zaiste.net/posts/shell-commands-rust/
# * https://lib.rs/command-line-utilities
- name: base packages
  homebrew:
    state: present
    name:
      - bat  # an improved cat, see also https://altbox.dev/
      - cheat # cheat sheets, like tldr but allows for custom cheat sheets
      - diffutils  # gnu diff, macos version lacks color
      - exa  # an ls replacement
      - fasd  # jump navigation
      - fd  # find replacement
      - fzf  # fuzzy finder
      - gawk # for tmux fingers plugin
      - git
      - ispell
      - less # the version that comes with macos is old
      - lesspipe
      - mackup  # symlink farm
      - ncdu  # ncurses disk usage
      - neovim
      - ripgrep  # like grep but better, a dependancy on doommacs, also just handy to have around
      - starship # fast/cross shell prompt
      - the_silver_searcher  # like ack but faster
      - tealdeer # a faster implemention of tldr (community driven man pages)
      - tmux
      - wget
      - zsh
    update_homebrew: true

- name: check if oh-my-zsh is installed
  stat:
    path: "{{ ansible_env.HOME }}/.oh-my-zsh"
  register: zsh_stat_result

- name: install oh-my-zsh
  include_tasks:
    file: oh-my-zsh.yml
  when: not zsh_stat_result.stat.exists

- name: find brew binary path
  command: which brew
  changed_when: false
  register: brew_binary_path

# This *should* be in zshenv however due to issues with path reordering in macos it's not
# see https://gist.github.com/Linerre/f11ad4a6a934dcf01ee8415c9457e7b2
- name: ensure we have the brew path & brew shell completions loaded on startup
  blockinfile:
    path: "{{ ansible_env.HOME }}/.zprofile"
    mode: 0644
    block: |
      eval "$({{ brew_binary_path.stdout }} shellenv)"
      export FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"
    insertbefore: BOF
    create: true

- name: symlinking mackup config
  file: src="{{ ansible_env.HOME }}/dotfiles/ansible/roles/dotfiles/files/mackup.cfg" dest="{{ ansible_env.HOME }}/.mackup.cfg" state=link

- name: symlinking mackup config directory
  file: src="{{ ansible_env.HOME }}/dotfiles/ansible/roles/dotfiles/files/.mackup" dest="{{ ansible_env.HOME }}/.mackup" state=link

- name: check if there are dotfiles to symlink
  command: mackup restore --dry-run
  changed_when: false
  register: mackup_result

- name: restore dotfile config via mackup
  command: mackup restore --force
  when: mackup_result.stdout | length > 0

- name: install community cheat sheets
  git:
    repo: https://github.com/cheat/cheatsheets.git
    dest: "{{ ansible_env.HOME }}/.config/cheat/cheatsheets/community"
    version: master

- name: install tmux plugin manager
  git:
    repo: https://github.com/tmux-plugins/tpm
    dest: "{{ ansible_env.HOME }}/.tmux/plugins/tpm"
    recursive: true
    version: master

- name: install tmux plugins
  command: "{{ ansible_env.HOME }}/.tmux/plugins/tpm/bin/install_plugins all"
  register: tmux_plugin_result
  changed_when: "'Installing' in tmux_plugin_result.stdout"
