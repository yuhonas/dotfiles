---
- name: ensure we have an .ssh dir with the correct perms
  file: path={{ ansible_env.HOME }}/.ssh state=directory mode=700

# https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html
- name: add local bin dir for custom scripts
  file: path={{ ansible_env.HOME }}/.local/bin state=directory recurse=yes

- name: add sites dir for various projects
  file: path={{ ansible_env.HOME }}/Sites state=directory

- name: base packages
  homebrew:
    state: present
    name:
      - asdf  # version manager
      - bat  # an improved cat, see also https://altbox.dev/
      - cheat # cheat sheets, like tldr but allows for custom cheat sheets
      - colordiff  # colorized diff wrapper
      - exa  # an ls replacement
      - fasd  # jump navigation
      - fd  # find replacement
      - fzf  # fuzzy finder
      - getantibody/tap/antibody # the fastest shell plugin manager (zsh)
      - git
      - ispell
      - lesspipe
      - lsd # an ls replacement
      - mackup  # symlink farm
      # - moreutils # https://joeyh.name/code/moreutils/
      - ncdu  # ncurses disk usage
      - neovim
      - ripgrep  # like grep but better
      - starship # fast/cross shell prompt
      - the_silver_searcher  # like ack but faster
      - tldr  # community driven man pages
      - tmux
      - tree
      - wget
      - zsh
    update_homebrew: yes

- name: check if oh-my-zsh is installed
  stat:
    path: "{{ ansible_env.HOME }}/.oh-my-zsh"
  register: zsh_stat_result

- name: install oh-my-zsh
  include_tasks:
    file: oh-my-zsh.yml
  when: not zsh_stat_result.stat.exists

- name: get brew env variables
  command: brew shellenv
  changed_when: false
  register: brew_shellenv

- name: get fzf directory
  command: brew --prefix fzf
  changed_when: false
  register: brew_fzfdir

- name: ensure brew env vars exist in zshenv
  blockinfile:
    path: "{{ ansible_env.HOME }}/.zshenv"
    block: |
      {{ brew_shellenv.stdout }}
      export FZF_BASE="{{ brew_fzfdir.stdout }}"
    insertbefore: BOF
    create: yes

- name: symlinking mackup config
  file: src="{{ ansible_env.HOME }}/src/ansible/roles/dotfiles/files/mackup.cfg" dest="{{ ansible_env.HOME }}/.mackup.cfg" state=link

- name: symlinking mackup config directory
  file: src="{{ ansible_env.HOME }}/src/ansible/roles/dotfiles/files/.mackup" dest="{{ ansible_env.HOME }}/.mackup" state=link

- name: check if there are dotfiles to symlink
  command: mackup restore --dry-run
  changed_when: false
  register: mackup_result

- name: restore dotfile config via mackup
  command: mackup restore --force
  when: mackup_result.stdout | length > 0

- name: install tmux plugin manager
  git:
    repo: https://github.com/tmux-plugins/tpm
    dest: "{{ ansible_env.HOME }}/.tmux/plugins/tpm"
    recursive: yes
    version: master

- name: install tmux plugins
  command: "{{ ansible_env.HOME }}/.tmux/plugins/tpm/bin/install_plugins all"
  register: tmux_plugin_result
  changed_when: "'Installing' in tmux_plugin_result.stdout"
